{"version":3,"sources":["webpack:///./template/template.hbs","webpack:///./index.js"],"names":["Handlebars","module","exports","template","container","depth0","helpers","partials","data","ref","document","querySelector","appendButton","markup","msnry","Masonry","itemSelector","columnWidth","percentPosition","imagesLoaded","console","log","layout","addEventListener","str","nodes","DOMParser","parseFromString","body","childNodes","scrollheigth","scrollHeight","newFragment","DocumentFragment","append","nodeList","querySelectorAll","appendChild","appended","window","scrollTo","top","behavior"],"mappings":"gFAAA,IAAIA,EAAa,EAAQ,QAEzBC,EAAOC,SAAWF,EAAoB,SAAKA,GAAYG,SAAS,CAAC,SAAW,CAAC,EAAE,YAAY,KAAO,SAASC,EAAUC,EAAOC,EAAQC,EAASC,GACzI,MAAO,q7DACT,SAAU,K,yDCJZ,oFAWMC,EAAMC,SAASC,cAAc,SAC7BC,EAAeF,SAASC,cAAc,WAGtCE,EAASV,MAUTW,EAAQ,IAAIC,IAAQN,EALV,CACdO,aAAc,aACdC,YAAa,cACbC,iBAAiB,IAMnBC,IAAaV,GAAK,WAChBW,QAAQC,IAAI,cACZP,EAAMQ,YAuBRV,EAAaW,iBAAiB,SAAS,WAGrC,IALeC,EAKTC,GALSD,EAKQX,GALD,IAAIa,WAAYC,gBAAgBH,EAAK,aAAaI,KAAKC,YAQvEC,EAAepB,SAASkB,KAAKG,aAI7BC,EAAc,IAAIC,iBAUxBD,EAAYE,OAAZ,MAAAF,EAAsBP,GAItB,IAAMU,EAAWH,EAAYI,iBAAiB,cAC9ChB,QAAQC,IAAIc,GAEZ1B,EAAI4B,YAAYL,GAGhBb,IAAaV,GAAK,WAChBK,EAAMwB,SAASH,GAGfI,OAAOC,SAAS,CACdC,IAAKX,EACLY,SAAU,mB","file":"main.f68bf48c3e7848ce4fe7.js","sourcesContent":["var Handlebars = require(\"../../node_modules/handlebars/runtime.js\");\nfunction __default(obj) { return obj && (obj.__esModule ? obj[\"default\"] : obj); }\nmodule.exports = (Handlebars[\"default\"] || Handlebars).template({\"compiler\":[8,\">= 4.3.0\"],\"main\":function(container,depth0,helpers,partials,data) {\n    return \"    <div class=\\\"grid-item\\\">\\r\\n      <img\\r\\n        src=\\\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/82/orange-tree.jpg\\\"\\r\\n      />\\r\\n    </div>\\r\\n    <div class=\\\"grid-item\\\">\\r\\n      <img\\r\\n        src=\\\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/82/submerged.jpg\\\"\\r\\n      />\\r\\n    </div>\\r\\n    <div class=\\\"grid-item\\\">\\r\\n      <img\\r\\n        src=\\\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/82/look-out.jpg\\\"\\r\\n      />\\r\\n    </div>\\r\\n    <div class=\\\"grid-item\\\">\\r\\n      <img\\r\\n        src=\\\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/82/one-world-trade.jpg\\\"\\r\\n      />\\r\\n    </div>\\r\\n    <div class=\\\"grid-item\\\">\\r\\n      <img\\r\\n        src=\\\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/82/drizzle.jpg\\\"\\r\\n      />\\r\\n    </div>\\r\\n    <div class=\\\"grid-item\\\">\\r\\n      <img\\r\\n        src=\\\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/82/cat-nose.jpg\\\"\\r\\n      />\\r\\n    </div>\\r\\n    <div class=\\\"grid-item\\\">\\r\\n      <img\\r\\n        src=\\\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/82/contrail.jpg\\\"\\r\\n      />\\r\\n    </div>\\r\\n    <div class=\\\"grid-item\\\">\\r\\n      <img\\r\\n        src=\\\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/82/golden-hour.jpg\\\"\\r\\n      />\\r\\n    </div>\\r\\n    <div class=\\\"grid-item\\\">\\r\\n      <img\\r\\n        src=\\\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/82/flight-formation.jpg\\\"\\r\\n      />\\r\\n    </div>\\r\\n        <div class=\\\"grid-item\\\">\\r\\n      <img\\r\\n        src=\\\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/82/cat-nose.jpg\\\"\\r\\n      />\\r\\n    </div>\\r\\n    <div class=\\\"grid-item\\\">\\r\\n      <img\\r\\n        src=\\\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/82/contrail.jpg\\\"\\r\\n      />\\r\\n    </div>\\r\\n    <div class=\\\"grid-item\\\">\\r\\n      <img\\r\\n        src=\\\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/82/golden-hour.jpg\\\"\\r\\n      />\\r\\n    </div>\\r\\n    <div class=\\\"grid-item\\\">\\r\\n      <img\\r\\n        src=\\\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/82/flight-formation.jpg\\\"\\r\\n      />\\r\\n    </div>\";\n},\"useData\":true});","import './styles.css';\nimport Masonry from 'masonry-layout'\nimport imagesLoaded from 'imagesloaded'\nimport template from \"./template/template.hbs\"\n// Установлены плагины Masonry, Imagesloaded, HandleBars\n// Стили, опции и картинки использованы с примеров\n//  https://codepen.io/desandro/pen/MwJoZQ\n//  https://codepen.io/desandro/pen/nhekz\n\n\n//  Ссылки на элементы \nconst ref = document.querySelector(\".grid\");\nconst appendButton = document.querySelector('.append');\n\n//  Импорт шаблона \nconst markup = template()\n\n\n//  Инициализация Masonry\n//  ======================\nconst options = {\n  itemSelector: '.grid-item',\n  columnWidth: '.grid-sizer',\n  percentPosition: true\n}\nconst msnry = new Masonry(ref, options)\n\n//  сортировка изображений после их загрузки\n// =================================\nimagesLoaded(ref, () => {\n  console.log('imd loaded');\n  msnry.layout()\n})\n\n// функция преобразующая шаблон в массив елементов \n// Так как из DocumentFragment() не получилось получить какой то список елементов,\n// необходимый для Masonry пришлось искать другой способ   \n// ===============================================\n\n\n//  по клику на кнопку добавляем картинки и всю магию\n// ================================\n\n\n\n//  Вариант 1\n// с использованием DocumentFragment()\n// =============================\n\n//  !!! Отличается от функции в варианте 1 \n// в варианте 2 мы используем .children \n\nconst getNodes = str => new DOMParser().parseFromString(str, 'text/html').body.childNodes\n\nappendButton.addEventListener('click', () => {\n\n  //  Создаем список узлоав из шаблона \n  const nodes = getNodes(markup);\n\n  //  фиксируем высоту документа перед добавлением елементов \n  const scrollheigth = document.body.scrollHeight\n\n  //  создаем пустой DocumentFragment(), так как\n  //  добавить туда аргументом ни массив, ни объект, ни шаблон, у меня не получилось \n  const newFragment = new DocumentFragment()\n\n  //   добавляем в DocumentFragment() елементы из списка\n\n  //  Вариант 1 \n  // nodes.forEach(e => {\n  //   newFragment.appendChild(e)\n  // })\n\n  //  Вариант 2\n  newFragment.append(...nodes)\n\n  // создаем объект в формате Node-list, для метода msnry.appended(nodelist)\n  // бонус в том что можно дабавить елементы по селекторам css\n  const nodeList = newFragment.querySelectorAll(\".grid-item\")\n  console.log(nodeList);\n  //  добавляем в DOM все елементы за 1 операцию\n  ref.appendChild(newFragment);\n\n  // когда все елементы загрузились заново сортируем картинки \n  imagesLoaded(ref, () => {\n    msnry.appended(nodeList);\n\n    // Скролим екран до новых елементов\n    window.scrollTo({\n      top: scrollheigth,\n      behavior: \"smooth\"\n    })\n  })\n});\n\n\n//  Вариант 2 \n// Без использования DocumentFragment()\n//  Намного меньше кода\n// ==============================\n\n//  !!! Отличается от функции в варианте 1 \n// в варианте 1 мы используем .childNodes, \n  // const getNodes = str => new DOMParser().parseFromString(str, 'text/html').body.children\n\n\n  // appendButton.addEventListener('click', () => {\n\n  //     //  Создаем список узлоав из шаблона \n  //     const nodes = getNodes(markup);\n  //     //  преобразовываем в массив, который подходит для метода msnry.appended(arr);\n  //     const arr = Array.from(nodes) \n\n  //     // добавляем елементы в DOM \n  //     ref.append(...nodes);\n\n  //     // Фиксируем высоту экрана до появления новых елементов\n  //     const scrollheigth = document.body.scrollHeight\n\n  //     //  когда картинки загрузились, сортируем их, скролим до начала новых\n  //   imagesLoaded(ref , () => {\n  //     msnry.appended(arr);\n  //     window.scrollTo({\n  //       top: scrollheigth,\n  //       behavior: \"smooth\"\n  //     })\n  //   })\n// });"],"sourceRoot":""}